name: Assessment_Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  Test_Service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Pull Assessment Docker Image
        run: docker pull mrksdh/assessment

      - name: Install curl
        run: |
          sudo apt-get update && sudo apt-get install -y curl

      - name: Create Docker Network
        run: |
          docker network create my_network

      - name: Start Assessment Docker Container
        run: |
          docker run -d --name assessment --network my_network -p 8080:8080 mrksdh/assessment
          sleep 15

      - name: Run Health Check
        run: |
          curl -f http://localhost:8080/health || exit 1

      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x ./Leistungsnachweis/gradlew


      - name: Build gradle
        working-directory: ./Leistungsnachweis
        run: |
            ./gradlew clean shadowJar



          - name: Run Calculator
        run: |
          # Führe den Calculator aus und fange die Ausgabe ein
          output=$(java -jar Leistungsnachweis/build/libs/*.jar)
          echo "$output"
          
          # Extrahiere den Statuscode aus der Ausgabe
          status_code=$(echo "$output" | grep -oP 'HTTP Status Code: [0-9]+' | cut -d " " -f 3)

          # Gebe den Statuscode aus und speichere ihn in GitHub-Umgebungsvariablen
          echo "status_code=$status_code" >> $GITHUB_ENV

          # Überprüfe den Statuscode
          if [ "$status_code" != "200" ]; then
            echo "Status code not found or is not 200, exiting with error."
            exit 1
          fi

          echo "Data successfully sent to the API."
